[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "Role Linker"
version = "0.1.0"
description = "Allow linking GitHub accounts to Discord accounts"
authors = ["onerandomusername <me@arielle.codes>"]
license = "MIT"
readme = "README.md"
packages = [{include = "role_linker"}]

[tool.poetry.dependencies]
python = "^3.11"
starlite = {extras = ["standard"], version = "^2.0.0a2", allow-prereleases = true}
sqlalchemy = {version = "^2.0.9", extras = ["asyncio"]}
alembic = "^1.10.3"
disnake = "^2.8.1"
asyncpg = "^0.27.0"
msgspec = "^0.14.0"
uvicorn = "^0.21.1"
httpx = "^0.23.3"
environs = "^9.5.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.261"
black = "^23.3.0"
pre-commit = "^3.2.2"
taskipy = "^1.10.4"
python-dotenv = "^1.0.0"
pyright = "^1.1.302"
isort = "^5.12.0"

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
atomic = true
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 120
lines_after_imports = 2
multi_line_output = 3
use_parentheses = true
known_first_party = ["role_linker"]

[tool.ruff.flake8-bugbear]
extend-immutable-calls = ["starlite.params.Parameter"]

[tool.ruff]
line-length = 120
target-version = "py38"
select = [
    "E", # pycodestyle
    "F", # pyflakes
    "W", # pycodestyle
    "S", # bandit
    "RUF", # ruff specific exceptions
    "ANN", # flake8-annotations
    "B", # flake8-bugbear
    "C", # flake8-comprehensions
    "D", # flake-docstrings
    "Q", # flake8-quotes
    "T201", "T203" # flake8-print
]
ignore = [
    # Missing Docstrings
    "D100","D101","D104","D105","D106","D107",
    # Docstring Whitespace
    "D203","D212","D214","D215",
    # Docstring Content
    "D400","D402","D404","D405","D406","D407","D408","D409","D410","D411","D412","D413","D414","D416","D417",

    # ignore imperative mood for now
    "D401",
    # Type Annotations
    "ANN002","ANN003","ANN101","ANN102","ANN204","ANN206","ANN401",

    # temporarily disabled
    "C901", # mccabe
    "S101", # Use of `assert` detected
    "S110", # try-except-pass
]

[tool.ruff.mccabe]
max-complexity = 20
